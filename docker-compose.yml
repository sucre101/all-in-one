version: "3.7"

networks:
  traefik:

services:

  traefik:
    image: "traefik:v2.10"
    container_name: "traefik"
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entryPoints.web.forwardedHeaders.insecure"
      - "--entryPoints.websecure.address=:443"
      - "--entrypoints.mysql.address=:3306"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.entrypoints=web"
      - "traefik.http.routers.api.rule=Host(`traefik.docker.localhost`)"
      - "traefik.http.routers.api.service=api@internal"
    ports:
      - "80:80"
      - "8080:8080"
      - "443:443"
      - "3306:3306"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - traefik

  nginx-laravel:
    image: nginx
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik"
      - "traefik.http.routers.nginx-laravel.entrypoints=web"
      - "traefik.http.routers.nginx-laravel.rule=Host(`current.localhost`) &&  PathPrefix(`/api`)"
      - "traefik.http.routers.nginx-laravel.priority=1"
      - "traefik.http.routers.nginx-laravel.service=nginx-laravel"
      - "traefik.http.services.nginx-laravel.loadbalancer.server.port=80"
    volumes:
      - './docker/nginx:/etc/nginx/conf.d/'
      - './backend/laravel:/var/www'
    networks:
      - traefik
    links:
      - laravel
    depends_on:
      - laravel

  # TODO: create server authorization (jwt auth)

  laravel:
    build:
      args:
        user: 'sammy'
        uid: '1000'
      context: './docker/php'
      dockerfile: Dockerfile
    restart: 'unless-stopped'
    working_dir: '/var/www/'
    image: 'laravel-list'
    expose:
      - '9000'
    volumes:
      - './backend/laravel:/var/www'
    labels:
      - "traefik.enable=false"
    links:
      - mysqldb
    networks:
      - traefik

  adonis-server:
    build:
      context: '.'
      dockerfile: ./docker/node/Dockerfile
    container_name: adonis-server
    image: 'dockertraefik-node-server'
    command: npm run dev
    restart: always
    environment:
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - mysqldb
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik"
      - "traefik.http.routers.adonis-server.entrypoints=web"
      - "traefik.http.routers.adonis-server.rule=Host(`current.localhost`) &&  PathPrefix(`/api`)"
      - "traefik.http.routers.adonis-server.priority=1"
      - "traefik.http.routers.adonis-server.service=adonis-server"
      - "traefik.http.services.adonis-server.loadbalancer.server.port=80"
    volumes:
      - './backend/adonis:/app'
      - '/backend/adonis/node_modules'
    networks:
      - traefik
    tty: true

  node-server:
    build:
      context: '.'
      dockerfile: ./docker/node/Dockerfile
    container_name: node-server
    image: 'dockertraefik-node-server'
    command: npm run dev
    restart: always
    environment:
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - mysqldb
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik"
      - "traefik.http.routers.node-server.entrypoints=web"
      - "traefik.http.routers.node-server.rule=Host(`current.localhost`) &&  PathPrefix(`/api`)"
      - "traefik.http.routers.node-server.priority=1"
      - "traefik.http.routers.node-server.service=node-server"
      - "traefik.http.services.node-server.loadbalancer.server.port=80"
    volumes:
      - './backend/node:/app'
      - '/backend/node/node_modules'
    networks:
      - traefik
    tty: true

  redis:
    image: redis:latest
    ports:
      - "6379:6379"

  mysqldb:
    image: 'mariadb:10.2'
    restart: unless-stopped
    volumes:
      - './mysqldb:/var/lib/mysql'
    labels:
      - "traefik.enable=true"
      - "traefik.tcp.routers.mysqldb.rule=HostSNI(`*`)"
      - "traefik.tcp.services.mysqldb.loadbalancer.server.port=3306"
      - "traefik.tcp.routers.mysqldb.entrypoints=mysql"
    networks:
      - traefik
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=test
      - MYSQL_USER=test
      - MYSQL_PASSWORD=test